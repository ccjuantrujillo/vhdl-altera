// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/15/2019 18:53:19"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Multiplexor (
	A,
	B,
	Sel,
	s);
input 	[3:0] A;
input 	[3:0] B;
input 	Sel;
output 	[3:0] s;

// Design Ports Information
// s[0]	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[1]	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[2]	=>  Location: PIN_43,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[3]	=>  Location: PIN_3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[0]	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_42,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sel	=>  Location: PIN_53,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[1]	=>  Location: PIN_39,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[2]	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[3]	=>  Location: PIN_34,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[3]	=>  Location: PIN_38,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \s[0]~output_o ;
wire \s[1]~output_o ;
wire \s[2]~output_o ;
wire \s[3]~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \Sel~input_o ;
wire \s~0_combout ;
wire \B[1]~input_o ;
wire \A[1]~input_o ;
wire \s~1_combout ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \s~2_combout ;
wire \A[3]~input_o ;
wire \B[3]~input_o ;
wire \s~3_combout ;


// Location: IOOBUF_X0_Y6_N23
cycloneive_io_obuf \s[0]~output (
	.i(\s~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \s[1]~output (
	.i(\s~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \s[2]~output (
	.i(\s~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N16
cycloneive_io_obuf \s[3]~output (
	.i(\s~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X3_Y0_N1
cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y6_N15
cycloneive_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N1
cycloneive_io_ibuf \Sel~input (
	.i(Sel),
	.ibar(gnd),
	.o(\Sel~input_o ));
// synopsys translate_off
defparam \Sel~input .bus_hold = "false";
defparam \Sel~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y2_N16
cycloneive_lcell_comb \s~0 (
// Equation(s):
// \s~0_combout  = (\Sel~input_o  & ((\B[0]~input_o ))) # (!\Sel~input_o  & (\A[0]~input_o ))

	.dataa(gnd),
	.datab(\A[0]~input_o ),
	.datac(\B[0]~input_o ),
	.datad(\Sel~input_o ),
	.cin(gnd),
	.combout(\s~0_combout ),
	.cout());
// synopsys translate_off
defparam \s~0 .lut_mask = 16'hF0CC;
defparam \s~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N15
cycloneive_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N1
cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y2_N10
cycloneive_lcell_comb \s~1 (
// Equation(s):
// \s~1_combout  = (\Sel~input_o  & (\B[1]~input_o )) # (!\Sel~input_o  & ((\A[1]~input_o )))

	.dataa(\B[1]~input_o ),
	.datab(gnd),
	.datac(\A[1]~input_o ),
	.datad(\Sel~input_o ),
	.cin(gnd),
	.combout(\s~1_combout ),
	.cout());
// synopsys translate_off
defparam \s~1 .lut_mask = 16'hAAF0;
defparam \s~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N15
cycloneive_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y2_N4
cycloneive_lcell_comb \s~2 (
// Equation(s):
// \s~2_combout  = (\Sel~input_o  & ((\B[2]~input_o ))) # (!\Sel~input_o  & (\A[2]~input_o ))

	.dataa(\A[2]~input_o ),
	.datab(gnd),
	.datac(\B[2]~input_o ),
	.datad(\Sel~input_o ),
	.cin(gnd),
	.combout(\s~2_combout ),
	.cout());
// synopsys translate_off
defparam \s~2 .lut_mask = 16'hF0AA;
defparam \s~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N22
cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N15
cycloneive_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y2_N6
cycloneive_lcell_comb \s~3 (
// Equation(s):
// \s~3_combout  = (\Sel~input_o  & ((\B[3]~input_o ))) # (!\Sel~input_o  & (\A[3]~input_o ))

	.dataa(\A[3]~input_o ),
	.datab(gnd),
	.datac(\B[3]~input_o ),
	.datad(\Sel~input_o ),
	.cin(gnd),
	.combout(\s~3_combout ),
	.cout());
// synopsys translate_off
defparam \s~3 .lut_mask = 16'hF0AA;
defparam \s~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign s[0] = \s[0]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[3] = \s[3]~output_o ;

endmodule
